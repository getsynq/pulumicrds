// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RateLimitConfig struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
}

// NewRateLimitConfig registers a new resource with the given unique name, arguments, and options.
func NewRateLimitConfig(ctx *pulumi.Context,
	name string, args *RateLimitConfigArgs, opts ...pulumi.ResourceOption) (*RateLimitConfig, error) {
	if args == nil {
		args = &RateLimitConfigArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("ratelimit.solo.io/v1alpha1")
	args.Kind = pulumi.StringPtr("RateLimitConfig")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource RateLimitConfig
	err := ctx.RegisterResource("kubernetes:ratelimit.solo.io/v1alpha1:RateLimitConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRateLimitConfig gets an existing RateLimitConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRateLimitConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RateLimitConfigState, opts ...pulumi.ResourceOption) (*RateLimitConfig, error) {
	var resource RateLimitConfig
	err := ctx.ReadResource("kubernetes:ratelimit.solo.io/v1alpha1:RateLimitConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RateLimitConfig resources.
type rateLimitConfigState struct {
}

type RateLimitConfigState struct {
}

func (RateLimitConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*rateLimitConfigState)(nil)).Elem()
}

type rateLimitConfigArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a RateLimitConfig resource.
type RateLimitConfigArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
}

func (RateLimitConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rateLimitConfigArgs)(nil)).Elem()
}

type RateLimitConfigInput interface {
	pulumi.Input

	ToRateLimitConfigOutput() RateLimitConfigOutput
	ToRateLimitConfigOutputWithContext(ctx context.Context) RateLimitConfigOutput
}

func (*RateLimitConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitConfig)(nil)).Elem()
}

func (i *RateLimitConfig) ToRateLimitConfigOutput() RateLimitConfigOutput {
	return i.ToRateLimitConfigOutputWithContext(context.Background())
}

func (i *RateLimitConfig) ToRateLimitConfigOutputWithContext(ctx context.Context) RateLimitConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitConfigOutput)
}

type RateLimitConfigOutput struct{ *pulumi.OutputState }

func (RateLimitConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitConfig)(nil)).Elem()
}

func (o RateLimitConfigOutput) ToRateLimitConfigOutput() RateLimitConfigOutput {
	return o
}

func (o RateLimitConfigOutput) ToRateLimitConfigOutputWithContext(ctx context.Context) RateLimitConfigOutput {
	return o
}

func (o RateLimitConfigOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitConfig) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o RateLimitConfigOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitConfig) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o RateLimitConfigOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *RateLimitConfig) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RateLimitConfigInput)(nil)).Elem(), &RateLimitConfig{})
	pulumi.RegisterOutputType(RateLimitConfigOutput{})
}
