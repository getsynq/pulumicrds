// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RouteOption struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	Spec       RouteOptionSpecPtrOutput   `pulumi:"spec"`
	Status     pulumi.MapOutput           `pulumi:"status"`
}

// NewRouteOption registers a new resource with the given unique name, arguments, and options.
func NewRouteOption(ctx *pulumi.Context,
	name string, args *RouteOptionArgs, opts ...pulumi.ResourceOption) (*RouteOption, error) {
	if args == nil {
		args = &RouteOptionArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("gateway.solo.io/v1")
	args.Kind = pulumi.StringPtr("RouteOption")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource RouteOption
	err := ctx.RegisterResource("kubernetes:gateway.solo.io/v1:RouteOption", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteOption gets an existing RouteOption resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteOption(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteOptionState, opts ...pulumi.ResourceOption) (*RouteOption, error) {
	var resource RouteOption
	err := ctx.ReadResource("kubernetes:gateway.solo.io/v1:RouteOption", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteOption resources.
type routeOptionState struct {
}

type RouteOptionState struct {
}

func (RouteOptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeOptionState)(nil)).Elem()
}

type routeOptionArgs struct {
	ApiVersion *string                `pulumi:"apiVersion"`
	Kind       *string                `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec       *RouteOptionSpec       `pulumi:"spec"`
	Status     map[string]interface{} `pulumi:"status"`
}

// The set of arguments for constructing a RouteOption resource.
type RouteOptionArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       RouteOptionSpecPtrInput
	Status     pulumi.MapInput
}

func (RouteOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeOptionArgs)(nil)).Elem()
}

type RouteOptionInput interface {
	pulumi.Input

	ToRouteOptionOutput() RouteOptionOutput
	ToRouteOptionOutputWithContext(ctx context.Context) RouteOptionOutput
}

func (*RouteOption) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteOption)(nil)).Elem()
}

func (i *RouteOption) ToRouteOptionOutput() RouteOptionOutput {
	return i.ToRouteOptionOutputWithContext(context.Background())
}

func (i *RouteOption) ToRouteOptionOutputWithContext(ctx context.Context) RouteOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteOptionOutput)
}

type RouteOptionOutput struct{ *pulumi.OutputState }

func (RouteOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteOption)(nil)).Elem()
}

func (o RouteOptionOutput) ToRouteOptionOutput() RouteOptionOutput {
	return o
}

func (o RouteOptionOutput) ToRouteOptionOutputWithContext(ctx context.Context) RouteOptionOutput {
	return o
}

func (o RouteOptionOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteOption) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o RouteOptionOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteOption) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o RouteOptionOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *RouteOption) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o RouteOptionOutput) Spec() RouteOptionSpecPtrOutput {
	return o.ApplyT(func(v *RouteOption) RouteOptionSpecPtrOutput { return v.Spec }).(RouteOptionSpecPtrOutput)
}

func (o RouteOptionOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *RouteOption) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouteOptionInput)(nil)).Elem(), &RouteOption{})
	pulumi.RegisterOutputType(RouteOptionOutput{})
}
