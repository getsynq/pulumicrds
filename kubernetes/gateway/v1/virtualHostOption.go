// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VirtualHostOption struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput         `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput         `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput     `pulumi:"metadata"`
	Spec       VirtualHostOptionSpecPtrOutput `pulumi:"spec"`
	Status     pulumi.MapOutput               `pulumi:"status"`
}

// NewVirtualHostOption registers a new resource with the given unique name, arguments, and options.
func NewVirtualHostOption(ctx *pulumi.Context,
	name string, args *VirtualHostOptionArgs, opts ...pulumi.ResourceOption) (*VirtualHostOption, error) {
	if args == nil {
		args = &VirtualHostOptionArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("gateway.solo.io/v1")
	args.Kind = pulumi.StringPtr("VirtualHostOption")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VirtualHostOption
	err := ctx.RegisterResource("kubernetes:gateway.solo.io/v1:VirtualHostOption", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualHostOption gets an existing VirtualHostOption resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualHostOption(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualHostOptionState, opts ...pulumi.ResourceOption) (*VirtualHostOption, error) {
	var resource VirtualHostOption
	err := ctx.ReadResource("kubernetes:gateway.solo.io/v1:VirtualHostOption", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualHostOption resources.
type virtualHostOptionState struct {
}

type VirtualHostOptionState struct {
}

func (VirtualHostOptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualHostOptionState)(nil)).Elem()
}

type virtualHostOptionArgs struct {
	ApiVersion *string                `pulumi:"apiVersion"`
	Kind       *string                `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta     `pulumi:"metadata"`
	Spec       *VirtualHostOptionSpec `pulumi:"spec"`
	Status     map[string]interface{} `pulumi:"status"`
}

// The set of arguments for constructing a VirtualHostOption resource.
type VirtualHostOptionArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       VirtualHostOptionSpecPtrInput
	Status     pulumi.MapInput
}

func (VirtualHostOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualHostOptionArgs)(nil)).Elem()
}

type VirtualHostOptionInput interface {
	pulumi.Input

	ToVirtualHostOptionOutput() VirtualHostOptionOutput
	ToVirtualHostOptionOutputWithContext(ctx context.Context) VirtualHostOptionOutput
}

func (*VirtualHostOption) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHostOption)(nil)).Elem()
}

func (i *VirtualHostOption) ToVirtualHostOptionOutput() VirtualHostOptionOutput {
	return i.ToVirtualHostOptionOutputWithContext(context.Background())
}

func (i *VirtualHostOption) ToVirtualHostOptionOutputWithContext(ctx context.Context) VirtualHostOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHostOptionOutput)
}

type VirtualHostOptionOutput struct{ *pulumi.OutputState }

func (VirtualHostOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHostOption)(nil)).Elem()
}

func (o VirtualHostOptionOutput) ToVirtualHostOptionOutput() VirtualHostOptionOutput {
	return o
}

func (o VirtualHostOptionOutput) ToVirtualHostOptionOutputWithContext(ctx context.Context) VirtualHostOptionOutput {
	return o
}

func (o VirtualHostOptionOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHostOption) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o VirtualHostOptionOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHostOption) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o VirtualHostOptionOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *VirtualHostOption) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o VirtualHostOptionOutput) Spec() VirtualHostOptionSpecPtrOutput {
	return o.ApplyT(func(v *VirtualHostOption) VirtualHostOptionSpecPtrOutput { return v.Spec }).(VirtualHostOptionSpecPtrOutput)
}

func (o VirtualHostOptionOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *VirtualHostOption) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHostOptionInput)(nil)).Elem(), &VirtualHostOption{})
	pulumi.RegisterOutputType(VirtualHostOptionOutput{})
}
