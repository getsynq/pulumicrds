// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MatchableTcpGateway struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput           `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput           `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput       `pulumi:"metadata"`
	Spec       MatchableTcpGatewaySpecPtrOutput `pulumi:"spec"`
	Status     pulumi.MapOutput                 `pulumi:"status"`
}

// NewMatchableTcpGateway registers a new resource with the given unique name, arguments, and options.
func NewMatchableTcpGateway(ctx *pulumi.Context,
	name string, args *MatchableTcpGatewayArgs, opts ...pulumi.ResourceOption) (*MatchableTcpGateway, error) {
	if args == nil {
		args = &MatchableTcpGatewayArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("gateway.solo.io/v1")
	args.Kind = pulumi.StringPtr("MatchableTcpGateway")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource MatchableTcpGateway
	err := ctx.RegisterResource("kubernetes:gateway.solo.io/v1:MatchableTcpGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMatchableTcpGateway gets an existing MatchableTcpGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMatchableTcpGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MatchableTcpGatewayState, opts ...pulumi.ResourceOption) (*MatchableTcpGateway, error) {
	var resource MatchableTcpGateway
	err := ctx.ReadResource("kubernetes:gateway.solo.io/v1:MatchableTcpGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MatchableTcpGateway resources.
type matchableTcpGatewayState struct {
}

type MatchableTcpGatewayState struct {
}

func (MatchableTcpGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*matchableTcpGatewayState)(nil)).Elem()
}

type matchableTcpGatewayArgs struct {
	ApiVersion *string                  `pulumi:"apiVersion"`
	Kind       *string                  `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta       `pulumi:"metadata"`
	Spec       *MatchableTcpGatewaySpec `pulumi:"spec"`
	Status     map[string]interface{}   `pulumi:"status"`
}

// The set of arguments for constructing a MatchableTcpGateway resource.
type MatchableTcpGatewayArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       MatchableTcpGatewaySpecPtrInput
	Status     pulumi.MapInput
}

func (MatchableTcpGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*matchableTcpGatewayArgs)(nil)).Elem()
}

type MatchableTcpGatewayInput interface {
	pulumi.Input

	ToMatchableTcpGatewayOutput() MatchableTcpGatewayOutput
	ToMatchableTcpGatewayOutputWithContext(ctx context.Context) MatchableTcpGatewayOutput
}

func (*MatchableTcpGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchableTcpGateway)(nil)).Elem()
}

func (i *MatchableTcpGateway) ToMatchableTcpGatewayOutput() MatchableTcpGatewayOutput {
	return i.ToMatchableTcpGatewayOutputWithContext(context.Background())
}

func (i *MatchableTcpGateway) ToMatchableTcpGatewayOutputWithContext(ctx context.Context) MatchableTcpGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchableTcpGatewayOutput)
}

type MatchableTcpGatewayOutput struct{ *pulumi.OutputState }

func (MatchableTcpGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchableTcpGateway)(nil)).Elem()
}

func (o MatchableTcpGatewayOutput) ToMatchableTcpGatewayOutput() MatchableTcpGatewayOutput {
	return o
}

func (o MatchableTcpGatewayOutput) ToMatchableTcpGatewayOutputWithContext(ctx context.Context) MatchableTcpGatewayOutput {
	return o
}

func (o MatchableTcpGatewayOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MatchableTcpGateway) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o MatchableTcpGatewayOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MatchableTcpGateway) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o MatchableTcpGatewayOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *MatchableTcpGateway) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o MatchableTcpGatewayOutput) Spec() MatchableTcpGatewaySpecPtrOutput {
	return o.ApplyT(func(v *MatchableTcpGateway) MatchableTcpGatewaySpecPtrOutput { return v.Spec }).(MatchableTcpGatewaySpecPtrOutput)
}

func (o MatchableTcpGatewayOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *MatchableTcpGateway) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MatchableTcpGatewayInput)(nil)).Elem(), &MatchableTcpGateway{})
	pulumi.RegisterOutputType(MatchableTcpGatewayOutput{})
}
